package com.idyoga.yoga.fragment;

import android.content.Intent;
import android.graphics.Bitmap;
import android.os.Bundle;
import android.view.View;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.alibaba.fastjson.JSON;
import com.idyoga.yoga.R;
import com.idyoga.yoga.activity.course.AppointmentVideoCourseActivity;
import com.idyoga.yoga.activity.course.ConsultCourseActivity;
import com.idyoga.yoga.activity.course.CourseActivity;
import com.idyoga.yoga.activity.setting.FeedbackActivity;
import com.idyoga.yoga.activity.setting.SettingActivity;
import com.idyoga.yoga.activity.user.AccountActivity;
import com.idyoga.yoga.activity.card.MembershipCardActivity;
import com.idyoga.yoga.base.BaseFragment;
import com.idyoga.yoga.comm.NetWorkConstant;
import com.idyoga.yoga.model.ResultBean;
import com.idyoga.yoga.model.UserInfoBean;
import com.idyoga.yoga.utils.EnumUtil;
import com.idyoga.yoga.utils.GlideImgManager;
import com.idyoga.yoga.utils.LoginUtil;
import com.idyoga.yoga.utils.ToastUtil;
import com.idyoga.yoga.utils.UserUtil;
import com.uuzuche.lib_zxing.activity.CodeUtils;
import com.zhy.http.okhttp.OkHttpUtils;
import com.zhy.http.okhttp.callback.StringCallback;

import java.util.HashMap;
import java.util.Map;

import butterknife.BindView;
import butterknife.OnClick;
import butterknife.Unbinder;
import okhttp3.Call;
import vip.devkit.library.Logcat;
import vip.devkit.library.SharedPreferencesUtils;

import static com.idyoga.yoga.utils.UserUtil.getUserBean;


/**
 * 作者 by K
 * 时间：on 2017/8/29 14:34
 * 邮箱 by  vip@devkit.vip
 * <p/>
 * 类用途：
 * 最后修改：
 */
public class MineFragment extends BaseFragment {
    @BindView(R.id.iv_hp)
    ImageView mIvHp;
    @BindView(R.id.tv_name)
    TextView mTvName;
    @BindView(R.id.iv_sex)
    ImageView mIvSex;
    @BindView(R.id.tv_mobile)
    TextView mTvMobile;
    @BindView(R.id.rl_user_state)
    RelativeLayout mRlUserState;
    @BindView(R.id.tv_go_login)
    TextView mTvGoLogin;
    @BindView(R.id.rl_for_login)
    RelativeLayout mRlForLogin;
    @BindView(R.id.iv_qr_code)
    ImageView mIvQrCode;
    @BindView(R.id.rl_user_state_1)
    RelativeLayout mRlUserState1;
    @BindView(R.id.rl_appointment_course)
    RelativeLayout mRlAppointmentCourse;
    @BindView(R.id.rl_consult_course)
    RelativeLayout mRlConsultCourse;
    @BindView(R.id.rl_video_course)
    RelativeLayout mRlVideoCourse;
    @BindView(R.id.rl_card_a)
    RelativeLayout mRlCardA;
    @BindView(R.id.rl_card_b)
    RelativeLayout mRlCardB;
    @BindView(R.id.rl_feedback)
    RelativeLayout mRlFeedback;
    @BindView(R.id.rl_setting)
    RelativeLayout mRlSetting;
    Unbinder unbinder;
    private UserInfoBean mUserInfoBean;
    private Bitmap mQrCode;
    private String Mobile, Token;
    private int UserId;

    @Override
    protected void initImmersionBar() {
        super.initImmersionBar();
        mImmersionBar.titleBar(mRlUserState1).flymeOSStatusBarFontColor("#ffffff").init();
    }

    @Override
    protected int setLayoutId() {
        return R.layout.fragment_user_account;
    }

    @Override
    protected void initData() {
        super.initData();
        Mobile = (String) SharedPreferencesUtils.getSP(mActivity, "Mobile", "");
        Token = (String) SharedPreferencesUtils.getSP(mActivity, "Token", "");
    }

    @Override
    protected void initView(View view) {
        super.initView(view);
        initHp();
    }

    private void initHp() {
        Map map = new HashMap();
    }

    @Override
    public void onStart() {
        super.onStart();
        initViewData();
    }

    private void updateUserInfo(int id, String token) {
        final Map map = new HashMap();
        map.put("userId", id + "");
        map.put("token", token + "");//
        OkHttpUtils.get().url(NetWorkConstant.BASE_URL_2 + "/User/getUserInfoById").params(map).build().execute(new StringCallback() {
            @Override
            public void onError(Call call, Exception e, int id) {
                Logcat.i("update user info onError：" + e);
            }

            @Override
            public void onResponse(String response, int id) {
                Logcat.i("update user info response：" + response);
                final ResultBean mResultBean = JSON.parseObject(response, ResultBean.class);
                if (mResultBean.getCode().equals("1")) {
                    UserInfoBean userInfoBean = JSON.parseObject(mResultBean.getData(), UserInfoBean.class);
                    SharedPreferencesUtils.setSP(mActivity, "UserId", userInfoBean.getId());
                    SharedPreferencesUtils.setSP(mActivity, "Token", userInfoBean.getToken());
                    UserUtil.setUserBean(mActivity, JSON.toJSONString(userInfoBean));
                    UserInfoBean userInfoBean1 = UserUtil.getUserBean(mActivity);
                    if (userInfoBean1 != null) {
                        Logcat.i("update user info success：" + "/\n" + userInfoBean1.toString());
                        serViewData(userInfoBean1);
                    }
                } else {
                    Logcat.e("" + mResultBean.getMsg());
                }
            }
        });
    }

    private void serViewData(UserInfoBean userInfoBean1) {
        if (userInfoBean1 != null) {
            mRlUserState.setVisibility(View.VISIBLE);
            mRlForLogin.setVisibility(View.GONE);
            Logcat.i("UserInfoBean          123:" + userInfoBean1.toString());
            mTvName.setText(userInfoBean1.getUsername());
            mTvMobile.setText(userInfoBean1.getMobile());
            initUserSex(userInfoBean1.getSex());
            GlideImgManager.glideLoader(mActivity, userInfoBean1.getAvatar_url(), mIvHp);//头像
        }
    }

    private void initViewData() {
        Logcat.i("initViewData:" + 1);
        UserId = (int) SharedPreferencesUtils.getSP(mActivity, "UserId", 0);
        mUserInfoBean = getUserBean(mActivity);
        if (mUserInfoBean != null) {
            Logcat.i("UserInfoBean:" + mUserInfoBean.toString());
            serViewData(mUserInfoBean);
            updateUserInfo(mUserInfoBean.getId(), mUserInfoBean.getToken());
        } else {
            mIvHp.setImageResource(R.drawable.img_06);
            mRlUserState.setVisibility(View.GONE);
            mRlForLogin.setVisibility(View.VISIBLE);
        }
    }

    public void initUserSex(int sex) {
        if (sex == 1) {
            mIvSex.setImageResource(R.drawable.ic_user_boy);
        } else {
            mIvSex.setImageResource(R.drawable.ic_user_girl);
        }
    }

    @Override
    public void setUserVisibleHint(boolean isVisibleToUser) {
        super.setUserVisibleHint(isVisibleToUser);
        if (isVisibleToUser) {
            if (mUserInfoBean != null) {
                GlideImgManager.glideLoader(mActivity, mUserInfoBean.getAvatar_url(), mIvHp);//头像
            }
            if (mImmersionBar != null && mRlUserState1 != null) ;
            mImmersionBar.titleBar(mRlUserState1).flymeOSStatusBarFontColor("#ffffff").init();
        }
    }

    @Override
    public void onResume() {
        super.onResume();
        if (mUserInfoBean != null) {
            GlideImgManager.glideLoader(mActivity, mUserInfoBean.getAvatar_url(), mIvHp);//头像
        }
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
    }


    @OnClick({R.id.iv_hp, R.id.rl_user_state, R.id.rl_for_login, R.id.rl_appointment_course,
            R.id.rl_consult_course, R.id.rl_video_course, R.id.rl_card_a, R.id.rl_card_b,
            R.id.rl_feedback, R.id.rl_setting})
    public void onViewClicked(View view) {
        Bundle mBundle;
        switch (view.getId()) {
            case R.id.iv_hp:
                if (!LoginUtil.checkLogin(mActivity)) return;
                mBundle = new Bundle();
                startActivityWithExtras(AccountActivity.class, 900, mBundle);
                break;
            case R.id.rl_user_state:
                if (!LoginUtil.checkLogin(mActivity)) return;
                mBundle = new Bundle();
                startActivityWithExtras(AccountActivity.class, 900, mBundle);
            case R.id.rl_for_login:
                LoginUtil.checkLogin(mActivity);
                break;
            case R.id.rl_appointment_course:
                if (!LoginUtil.checkLogin(mActivity)) return;
                mBundle = new Bundle();
                mBundle.putString("tag", "0");
                startActivityWithExtras(CourseActivity.class, mBundle);
                break;
            case R.id.rl_consult_course:
                if (!LoginUtil.checkLogin(mActivity)) return;
                mBundle = new Bundle();
                mBundle.putString("tag", "0");
                startActivityWithExtras(ConsultCourseActivity.class, mBundle);
                break;
            case R.id.rl_video_course:
                if (!LoginUtil.checkLogin(mActivity)) return;
                startActivityWithoutExtras(AppointmentVideoCourseActivity.class);
                break;
            case R.id.rl_card_a:
                if (!LoginUtil.checkLogin(mActivity)) return;
                Intent intent = new Intent(getActivity(),MembershipCardActivity.class);
                startActivityForResult(intent,10002);
                break;
            case R.id.rl_card_b:
                ToastUtil.showToast("敬请期待");
                break;
            case R.id.rl_setting:
                mBundle = new Bundle();
                startActivityWithExtras(SettingActivity.class, mBundle);
                break;
            case R.id.rl_feedback:
                if (!LoginUtil.checkLogin(mActivity)) return;
                startActivityWithoutExtras(FeedbackActivity.class);
                break;
        }
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == 900) {
            initViewData();
        }
    }
}
